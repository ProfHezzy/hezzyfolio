(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define('localforageSerializer', ['module', 'exports', './createBlob'], factory);
    } else if (typeof exports !== "undefined") {
        factory(module, exports, require('./createBlob'));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod, mod.exports, global.createBlob);
        global.localforageSerializer = mod.exports;
    }
})(this, function (module, exports, _createBlob) {
    'use strict';

    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _createBlob2 = _interopRequireDefault(_createBlob);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    // Sadly, the best way to save binary data in WebSQL/localStorage is serializing
    // it to Base64, so this is how we store it to prevent very strange errors with less
    // verbose ways of binary <-> string data storage.
    var BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'; /* eslint-disable no-bitwise */


    var BLOB_TYPE_PREFIX = '~~local_forage_type~';
    var BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;

    var SERIALIZED_MARKER = '__lfsc__:';
    var SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;

    // OMG the serializations!